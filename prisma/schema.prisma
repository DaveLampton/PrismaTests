generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMATESTS_DB_URL")
}

model Argument {
  id          Int       @id @default(autoincrement())
  assertionId Int
  sourceId    Int
  userId      Int
  side        Boolean
  score       Float     @default(50.0)
  text        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  assertion   Assertion @relation(fields: [assertionId], references: [id])
  source      Source    @relation(fields: [sourceId], references: [id])
  contributor User      @relation(fields: [userId], references: [id])
  ratings     Rating[]
}

model Assertion {
  id              Int             @id @default(autoincrement())
  urlToken        String          @unique
  userId          Int
  sourceId        Int
  score           Float           @default(50.0)
  text            String
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  representative  User            @relation(fields: [userId], references: [id])
  source          Source          @relation(fields: [sourceId], references: [id])
  arguments       Argument[]
}

model Rating {
  userId     Int
  argumentId Int
  rating     Boolean
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  argument   Argument @relation(fields: [argumentId], references: [id])
  user       User     @relation(fields: [userId], references: [id])

  @@id([userId, argumentId])
}

model Source {
  id              Int               @id @default(autoincrement())
  domain          String            @unique
  score           Float             @default(50.0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  arguments       Argument[]
  assertions      Assertion[]
  users           User[]
}

model User {
  id              Int               @id @default(autoincrement())
  name            String
  email           String            @unique
  passwordHash    String
  role            UserRole          @default(USER)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  assertions      Assertion[]
  arguments       Argument[]
  ratings         Rating[]
  sources         Source[]
}

enum UserRole {
  SUPERADMIN
  ADMIN
  USER
}
